<!-- +=====================================================================+ -->
<!-- |                                                                     | -->
<!-- |                      - w i n d o w s . x m l                        | -->
<!-- |                                                                     | -->
<!-- +=====================================================================+ -->

<project name="windows" basedir="../..">
  
    <description>
        All targets specific to Windows platform.
    
        Targets are presented in alphabetical order, regardless of initial '-'.
        An initial '-' indicates an internal target.
    </description>
  
  <!--
      To generate 32-bit and 64-bit Windows installers      
      Symbolic folders names to use:
      
      for 32-bit package (w/ their target on Win64)
        CommonFilesFolder  - C:\Program Files (x86)\Common Files\ 
        ProgramFilesFolder - C:\Program Files (x86)\
        SystemFolder       - C:\Windows\SysWOW64\
        
      for 64-bit package
        CommonFiles64Folder  - C:\Program Files\Common Files\
        ProgramFiles64Folder - C:\Program Files\
        System64Folder       - C:\Windows\system32\
    -->    
  
    <!-- Workaround for COMMONPROGRAMFILES vs CommonProgramFiles -->
    <condition property="use.upper">
        <isset property="env.COMMONPROGRAMFILES" />
    </condition>
    <!--    <echo message="use.upper=${use.upper}" />-->
  
    <condition property="use.camel">
        <isset property="env.CommonProgramFiles" />
    </condition>
    <!--    <echo message="use.camel=${use.camel}" />-->
  
    <!-- ===  Public Targets  ============================================== -->
  
    <!-- =========================== -->
    <!--  W I N D O W S - E X E C S  -->
    <!-- =========================== -->
    <target name="windows-execs"
            depends="jar, -bat, -exe, -exe-console, -no-windows-execs"
            if="${is.windows}"
            description="Build all Windows executables" />
  
    <!-- =============================== -->
    <!--  W I N D O W S - I N S T A L L  -->
    <!-- =============================== -->
    <target name="windows-install"
            depends="-get-msi-name"
            if="${is.windows}"
            description="Install for Windows">
        <property name="msi.name" value="${impl.name}.msi"/>
        <echo message="Windows installation from ${msi.name}" />
        <exec executable="msiexec"
              dir="${dist.dir}">
            <arg value="/i"/>
            <arg value="${msi.name}"/>
        </exec>
    </target>
  
    <!-- ===================================== -->
    <!--  W I N D O W S - I N S T A L L E R S  -->
    <!-- ===================================== -->
    <target name="windows-installers"
            depends="windows-execs, -wxs-generation, -do-installers, -wix-cleanup, -wxs-cleanup"
            if="${is.windows}"
            description="Build Windows installer" />
  
    <!-- =================================== -->
    <!--  W I N D O W S - U N I N S T A L L  -->
    <!-- =================================== -->
    <target name="windows-uninstall"
            depends="-get-msi-name"
            if="${is.windows}"
            description="Uninstall for Windows">
        <echo message="Windows uninstallation from ${msi.name}" />
        <exec executable="msiexec"
              dir="${dist.dir}">
            <arg value="/x"/>
            <arg value="${msi.name}"/>
        </exec>
    </target>        
  
    <!-- ===  Internal Targets  ============================================ -->
  
  
    <!-- ========= -->
    <!--  - B A T  -->
    <!-- ========= -->
    <target name="-bat"           
            if="${is.windows}">
        <!-- .bat file for windows -->
        <echo file="${basedir}/${name}.bat" append="false">@ECHO OFF
            REM ${name}.bat
            setlocal
            java -Xms512M -Xmx512M -jar dist/${name}.jar %1 %2 %3 %4 %5 %6 %7 %8 %9
            endlocal
        </echo>
    
    </target>
  
    <!-- ===================== -->
    <!--  - B U I L D - M S I  -->
    <!-- ===================== -->
    <target name="-build-msi"
            depends="-wix-cleanup"
            if="${is.windows}">
    
        <echo message="Using CommonProgramFiles at ${cpf}" />
        <echo message="Beware, this task takes a couple of minutes..." />    
        <echo message="arch=${arch}" />
    
        <!-- Compilation -->
        <wix mode="candle"> 
            <candleParameter name="myImplVersion"  value="${impl.version}"/>
            <candleParameter name="myCompany"      value="${Company}"/>            
            <candleParameter name="myCompanyId"    value="${CompanyId}"/>            
            <candleParameter name="myConsole"      value="${name}-console"/>
            <candleParameter name="myDistLib"      value="${dist.dir}/lib"/>
            <candleParameter name="myEval"         value="${eval.dir}"/>
            <candleParameter name="myExamples"     value="${examples.dir}"/>
            <candleParameter name="myProductName"  value="${name}"/>
            <candleParameter name="myIconSource"   value="${res.dir}/all-icons-256.ico"/>
            <candleParameter name="myJar"          value="${dist.jar}"/>
            <candleParameter name="myMaterial"     value="${material.dir}"/>
            <candleParameter name="myOcr"          value="${ocr.dir}"/>
            <candleParameter name="myPlugins"      value="${basedir}/plugins"/>
            <candleParameter name="myRes"          value="${res.dir}"/>
            <candleParameter name="mySettings"     value="${settings.dir}"/>
            <candleParameter name="mySoftware"     value="${name}"/>
            <candleParameter name="myTrain"        value="${train.dir}"/>
            <candleParameter name="myWww"          value="${www.dir}"/>
            <candleParameter name="myDll"          value="${dll.dir}"/>
      
            <candleParameter name="myVC"           value="${cpf}/Merge Modules/Microsoft_VC90_CRT_x86.msm"/>
      
            <candleParameter name="myArch"         value="${arch}"/>
      
            <candleArg line="-out ${dist.dir}\"/>        
      
            <candleArg line="-arch ${arch}"/>        
      
            <sources dir="${dev.windows.dir}">
                <include name="*.wxs"/>
            </sources>
        </wix>
    
        <!-- Link -->
        <wix mode="light"
             target="${dist.dir}/${impl.name}-${arch}.msi">
            <lightArg line="-ext WixUIExtension" />
            <lightArg line="-dWixUILicenseRtf=${res.dir}/GPLv2.rtf" />
            <lightArg line="-sice:ICE91" />
            <sources dir="${dist.dir}/">
                <include name="*.wixobj"/>
            </sources>
        </wix>
    
    </target>
  
    <!-- ============= -->
    <!--  - C L E A N  -->
    <!-- ============= -->
    <target name="-clean"
            if="${is.windows}">
        <!-- Remove all the generated outputs for Windows -->
        <delete verbose="${verbose}">
            <fileset dir="${basedir}" includes="*.exe, *.bat"/>
        </delete> 
    </target>
  
    <!-- ============================= -->
    <!--  - D O - I N S T A L L E R S  -->
    <!-- ============================= -->
    <target name="-do-installers"
            depends="-wix-taskdef, -hg-tip, -get-upper-cpf, -get-camel-cpf"
            if="${is.windows}">
    
        <!-- Build for x86 -->
        <antcall target="-build-msi">
            <param name="arch" value="x86" />
        </antcall>
    
        <!-- Build for x64 -->
        <antcall target="-build-msi">
            <param name="arch" value="x64" />
        </antcall>
    
    </target>
  
    <!-- ========= -->
    <!--  - E X E  -->
    <!-- ========= -->
    <target name="-exe"           
            depends="-launch4j-taskdef"
            if="${is.windows}">                
    
        <!-- Build Windows executable without console -->
        <launch4j>
            <config headerType="gui"
                    outfile="${name}.exe"
                    dontWrapJar="true"
                    jarPath="dist/${name}.jar" >
                <jre minVersion="${jre.min}"/>
                <splash file="${res.dir}/splash.bmp"/>
            </config>
        </launch4j>	
    </target>
  
    <!-- ========================= -->
    <!--  - E X E - C O N S O L E  -->
    <!-- ========================= -->
    <target name="-exe-console"   
            depends="-launch4j-taskdef"
            if="${is.windows}">
    
        <!-- Build Windows executable with console -->
        <launch4j fileVersion="${impl.version}">
            <config headerType="console"
                    outfile="${name}-console.exe"
                    dontWrapJar="true"
                    jarPath="dist/${name}.jar" >
                <jre minVersion="${jre.min}"/>
            </config>
        </launch4j>	
    </target>
  
    <!-- =========================== -->
    <!--  - G E T - M S I - N A M E  -->
    <!-- =========================== -->
    <target name="-get-msi-name">
      <!-- WRONG: need arch suffix!!!! -->
        <property name="msi.name" value="${impl.name}.msi"/>        
    </target>
  
    <!-- ============================= -->
    <!--  - G E T - U P P E R - C P F  -->
    <!-- ============================= -->
    <target name="-get-upper-cpf" if="use.upper">
        <property name="cpf" value="${env.COMMONPROGRAMFILES}" />
    </target>
  
    <!-- ============================= -->
    <!--  - G E T - C A M E L - C P F  -->
    <!-- ============================= -->
    <target name="-get-camel-cpf" if="use.camel">
        <property name="cpf" value="${env.CommonProgramFiles}" />
    </target>
  
    <!-- =================================== -->
    <!--  - L A U N C H 4 J - T A S K D E F  -->
    <!-- =================================== -->
    <target name="-launch4j-taskdef"
            if="${is.windows}">
        <!-- launch4j task definition -->
        <taskdef name="launch4j"
                 classname="net.sf.launch4j.ant.Launch4jTask">
            <classpath>
                <fileset dir="${launch4j.dir}" includes="launch4j.jar" />
                <fileset dir="${launch4j.dir}/lib" includes="xstream.jar" />
            </classpath>
        </taskdef>
    </target>
  
    <!-- ================================== -->
    <!--  - N O - W I N D O W S -E X E C S  -->
    <!-- ================================== -->
    <target name="-no-windows-execs"
            unless="${is.windows}">
        <echo message="Windows execs are generated only from Windows" />
    </target>
  
    <!-- ========================= -->
    <!--  - W I X - C L E A N U P  -->
    <!-- ========================= -->
    <target name="-wix-cleanup"
            if="${is.windows}">
        <echo message="Cleaning up the wix stuff in dist" />
    
        <!-- Clean up temporary files in dist -->
        <delete verbose="${verbose}"> 
            <fileset dir="${dist.dir}" includes="*.wix*"/>
        </delete>
    
    </target>
  
    <!-- ========================= -->
    <!--  - W X S - C L E A N U P  -->
    <!-- ========================= -->
    <target name="-wxs-cleanup"
            if="${is.windows}">
        <echo message="Cleaning up the generated wxs files" />
    
        <!-- Clean up temporary files in dev/windows -->
        <delete verbose="${verbose}"> 
            <fileset dir="${dev.windows.dir}" includes="gen-*.*"/>
        </delete>
    
    </target>
    
    <!-- ========================= -->
    <!--  - W I X - T A S K D E F  -->
    <!-- ========================= -->
    <target name="-wix-taskdef">    
        <!-- wix task definition (et al.) -->
        <taskdef 
            resource="org/apache/ant/dotnet/antlib.xml"
            classpathref="tools.classpath" />
    </target>

    <!-- =============================== -->
    <!--  - W X S - G E N E R A T I O N  -->
    <!-- =============================== -->
    <target name="-wxs-generation"
            if="${is.windows}">
        <!-- Harvesting of directories -->
    
        <!-- Folders for common location -->
    
        <property name="heat.options" value="-nologo -gg -g1 -sfrag" />
    
        <echo message="buiding ${dev.windows.dir}/gen-common-lib.wxs" />
        <exec executable="heat">
            <arg value="dir"/>
            <arg value="${dist.dir}/lib"/>
            <arg line="${heat.options}"/>
            <arg line="-dr distDirId"/>
            <arg line="-cg lib.CID"/>
            <arg line="-var var.myDistLib"/>
            <arg line="-out ${dev.windows.dir}/gen-common-lib.wxs"/>
        </exec>
    
        <echo message="buiding ${dev.windows.dir}/gen-common-ocr.wxs" />
        <exec executable="heat">
            <arg value="dir"/>
            <arg value="${ocr.dir}"/>
            <arg line="${heat.options}"/>
            <arg line="-dr INSTALLDIR"/>
            <arg line="-cg ocr.CID"/>
            <arg line="-var var.myOcr"/>
            <arg line="-out ${dev.windows.dir}/gen-common-ocr.wxs"/>
        </exec>
    
        <echo message="buiding ${dev.windows.dir}/gen-common-res.wxs" />
        <exec executable="heat">
            <arg value="dir"/>
            <arg value="${res.dir}"/>
            <arg line="${heat.options}"/>
            <arg line="-dr INSTALLDIR"/>
            <arg line="-cg res.CID"/>
            <arg line="-var var.myRes"/>
            <arg line="-out ${dev.windows.dir}/gen-common-res.wxs"/>
        </exec>
    
        <echo message="buiding ${dev.windows.dir}/gen-common-www.wxs" />
        <exec executable="heat">
            <arg value="dir"/>
            <arg value="${www.dir}"/>
            <arg line="${heat.options}"/>
            <arg line="-dr INSTALLDIR"/>
            <arg line="-cg www.CID"/>
            <arg line="-var var.myWww"/>
            <arg line="-out ${dev.windows.dir}/gen-common-www.wxs"/>
        </exec>
    
        <!-- Folders for user location -->
    
        <echo message="buiding ${dev.windows.dir}/gen-user-examples.wxs" />
        <exec executable="java">
            <arg line="-jar ${tools.dir}/wix-heat-user.jar"/>
            <arg value="${examples.dir}"/>
            <arg line="-dr adProductDirId"/>
            <arg line="-cg examples.CID"/>
            <arg line="-var var.myExamples"/>
            <arg line="-out ${dev.windows.dir}/gen-user-examples.wxs"/>
        </exec>
    
        <echo message="buiding ${dev.windows.dir}/gen-user-settings.wxs" />
        <exec executable="java">
            <arg line="-jar ${tools.dir}/wix-heat-user.jar"/>
            <arg value="${settings.dir}"/>
            <arg line="-dr adProductDirId"/>
            <arg line="-cg settings.CID"/>
            <arg line="-var var.mySettings"/>
            <arg line="-out ${dev.windows.dir}/gen-user-settings.wxs"/>
        </exec>
    
        <echo message="buiding ${dev.windows.dir}/gen-user-eval.wxs" />
        <exec executable="java">
            <arg line="-jar ${tools.dir}/wix-heat-user.jar"/>
            <arg value="${eval.dir}"/>
            <arg line="-dr adProductDirId"/>
            <arg line="-cg eval.CID"/>
            <arg line="-var var.myEval"/>
            <arg line="-out ${dev.windows.dir}/gen-user-eval.wxs"/>
        </exec>
    
        <echo message="buiding ${dev.windows.dir}/gen-user-plugins.wxs" />
        <exec executable="java">
            <arg line="-jar ${tools.dir}/wix-heat-user.jar"/>
            <arg value="${basedir}/plugins"/>
            <arg line="-dr adProductDirId"/>
            <arg line="-cg plugins.CID"/>
            <arg line="-var var.myPlugins"/>
            <arg line="-out ${dev.windows.dir}/gen-user-plugins.wxs"/>
        </exec>
    
        <echo message="buiding ${dev.windows.dir}/gen-user-train.wxs" /> 
        <exec executable="java">
            <arg line="-jar ${tools.dir}/wix-heat-user.jar"/>
            <arg value="${train.dir}"/>
            <arg line="-dr adProductDirId"/>
            <arg line="-cg train.CID"/>
            <arg line="-var var.myTrain"/> 
            <arg line="-out ${dev.windows.dir}/gen-user-train.wxs"/>
        </exec> 
    
    </target>

  </project>
