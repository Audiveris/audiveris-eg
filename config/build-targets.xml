<!-- +================================================================+ -->
<!-- |                                                                | -->
<!-- |                 b u i l d - t a r g e t s . x m l              | -->
<!-- |                                                                | -->
<!-- | abstract: ant build for Audiveris application                  | -->
<!-- | author:   herve.bitteur@laposte.net                            | -->
<!-- |                                                                | -->
<!-- +================================================================+ -->

<project name="audiveris-targets" basedir="../..">
    
    <!-- ============================= -->
    <!--  - J A V A D O C - B U I L D  -->
    <!-- ============================= -->
    <target name="-javadoc-build">
	<!--         description="Generate project documentation" -->
	
	<echo>DEBUG My -javadoc-build</echo>

        <!-- Get rid of existing html files -->
        <!-- without deleting the directory (to keep CVS admin files) -->
        <mkdir dir="${dist.javadoc.dir}" />
        <delete verbose="${verbose}">
            <fileset dir="${dist.javadoc.dir}" 
                     includes="**/*.html" 
                     />
        </delete>

        <!-- Warn the user -->
        <echo message="Beware: this javadoc task is AWFULLY LONG ..." />
        
        <javadoc
            author       ="yes"
            bottom       ="${copyright.message}"
            classpathref ="project.tools.classpath"
            destdir      ="${dist.javadoc.dir}"
            doctitle     ="${Name} ${spec.version} API"
            encoding     ="${build.encoding}"
            overview     ="${javadoc.overview}"
            package      ="yes"
            packagenames ="${javadoc.packages}"
            sourcepath   ="${src.dir}"
            version      ="yes"
            >

            <!-- Which Java files to process -->
            <source file="${src.dir}/Audiveris.java"/>

            <!-- Define a logical grouping of packages -->
             <group packages="omr:omr.sheet:omr.score:omr.glyph"
                 title="Driving Packages"/>
             <group packages="omr.ui:omr.ui.*:omr.glyph.ui"
                 title="User interface Packages"/>
             <group packages="omr.graph:omr.lag*:omr.stick*"
                 title="Geometry Packages"/>
             <group packages="omr.check:omr.constant:omr.math:omr.util"
                 title="Utility Packages"/>
        </javadoc>

    </target>

    <!-- =========================== -->
    <!--  - P O S T - J A V A D O C  -->
    <!-- =========================== -->
    <target name="-post-javadoc">

        <!-- Remove time stamp in javadoc files, to ease CVS handling -->
        <echo message="Removing time stamps ..." />
        <replaceregexp replace="-- Generated by javadoc --"
                       match="-- Generated by javadoc .*--" >
            <fileset dir="${dist.javadoc.dir}" 
                     includes="**/*.html" 
                     />
        </replaceregexp>
	
        <!-- Slightly modify java CVS tag, so as not to be used as html CVS tag -->
	<!-- Nota: We cannot directly use a litteral regexp, since
	     this very file is also handled by CVS, hence the dynamic
	     value building of the regexp as property m.all !!!  -->
        <echo message="Trimming Java CVS tags ..." />
	<property name="m.dollar" value="\$"/>
	<property name="m.id" value="Id:"/>
	<property name="m.all" value="${m.dollar}${m.id} (.*) ${m.dollar}"/>
        <replaceregexp replace="\1"
                       match="${m.all}" >
            <fileset dir="${dist.javadoc.dir}" 
                     includes="**/*.html" 
                     />
        </replaceregexp>
	
    </target>

    <!-- ===================================== -->
    <!--  - P O S T - P O S T - J A V A D O C  -->
    <!-- ===================================== -->
    <target name="-post-post-javadoc">
	<!-- Copy all doc files where NetBeans expects them to be -->

        <mkdir dir="${nb.javadoc.dir}"/>
	
        <copy
            verbose="${verbose}"
            todir="${nb.javadoc.dir}">
            <fileset dir="${dist.javadoc.dir}"  
                     excludes="**/CVS/*"/>
        </copy>
	
    </target>

</project>

